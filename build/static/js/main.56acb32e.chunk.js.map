{"version":3,"sources":["components/BurgerIngredient/BurgerIngredient.css","components/Layout/Layout.css","components/Burger/Burger.css","components/Burger/BuildControls/BuildControls.css","hoc/Aux.js","components/Layout/Layout.js","components/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","containers/BurgerBuilder/BurgerBuilder.js","App.js","serviceWorker.js","index.js","components/Burger/BuildControls/BuildControl/BuildControl.css"],"names":["module","exports","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","Content","Burger","BuildControls","aux","props","children","layout","react_default","a","createElement","Aux","className","classes","BurgerIngredient","ingredient","this","type","Component","protoType","PropTypes","string","isRequired","burger","transformedIngredients","Object","keys","ingredients","map","igKey","toConsumableArray","Array","_","i","components_BurgerIngredient_BurgerIngredient","key","reduce","arr","el","concat","length","buildControl","BuildControl","Label","label","Less","onClick","removed","disabled","More","added","controls","buildControls","ctrl","BuildControl_BuildControl","ingredientAdded","ingredientRemove","PRICE_INGREDIENT","salad","bacon","cheese","meat","BurgerBuilder","state","totalPrice","addIngredientHandler","updateCount","_this","updateIngredient","objectSpread","newPrice","setState","removeIngredientHandler","oldCount","disableInfo","Burger_Burger","BuildControls_BuildControls","App","Layout_Layout","containers_BurgerBuilder_BurgerBuilder","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.56acb32e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom_3gvFM\",\"BreadTop\":\"BurgerIngredient_BreadTop_1PRVY\",\"Seeds1\":\"BurgerIngredient_Seeds1_2fQIB\",\"Seeds2\":\"BurgerIngredient_Seeds2_1I7ry\",\"Meat\":\"BurgerIngredient_Meat_1M3fw\",\"Cheese\":\"BurgerIngredient_Cheese_UbGhv\",\"Salad\":\"BurgerIngredient_Salad_12boN\",\"Bacon\":\"BurgerIngredient_Bacon_LqGsk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content_LhJtv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger_3K4F-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls_3_01f\"};","const aux = (props) => props.children;\n\nexport default aux;","import React from 'react';\n\nimport Aux from '../../hoc/Aux';\nimport classes from './Layout.css';\n\nconst layout = ( props ) => (\n    <Aux>\n        <div>\n            Toolbar, SideDrawer, Backdrop\n        </div>\n        <main className={classes.Content}>\n            {props.children}\n        </main>\n    </Aux>\n);\n\nexport default layout;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport classes from './BurgerIngredient.css';\n\nclass BurgerIngredient extends Component {\n    render () {\n        let ingredient = null;\n\n        switch (this.props.type) {\n            case ('bread-bottom'):\n                ingredient = <div className={classes.BreadBottom}></div>;\n                break;\n            case ('bread-top'):\n                ingredient = (\n                    <div className={classes.BreadTop}>\n                        <div className={classes.Seeds1}></div>\n                        <div className={classes.Seeds2}></div>\n                    </div>\n                );\n                break;\n            case ('meat'):\n                ingredient = <div className={classes.Meat}></div>;\n                break;\n            case ('cheese'):\n                ingredient = <div className={classes.Cheese}></div>;\n                    break;\n            case ('salad'):\n                ingredient = <div className={classes.Salad}></div>;\n                break;\n            case ('bacon'):\n                ingredient = <div className={classes.Bacon}></div>;\n                break;\n            default:\n                ingredient = null;\n        }\n    \n        return ingredient;\n    }\n}\n\nBurgerIngredient.protoType = {\n    type: PropTypes.string.isRequired\n};\n\nexport default BurgerIngredient;","import React from 'react';\n\nimport classes from './Burger.css';\nimport BurgerIngredient from '../BurgerIngredient/BurgerIngredient';\n\nconst burger = (props) => {\n    let transformedIngredients = Object.keys(props.ingredients)\n    .map(igKey => {\n            return [...Array(props.ingredients[igKey])].map((_, i) => {\n                return <BurgerIngredient key={igKey + i} type={igKey}/>;\n            });\n        })\n        .reduce((arr, el) => {\n            return arr.concat(el)\n        }, []);\n    if (transformedIngredients.length === 0){\n        transformedIngredients = <p>Please rajouter des ingredients!</p>;\n    }\n    return (\n        <div className={classes.Burger}>\n            <BurgerIngredient type=\"bread-top\"/>\n            {transformedIngredients}\n            <BurgerIngredient type=\"bread-bottom\"/>\n        </div>\n    );\n}\n\nexport default burger;","import React from 'react';\n\nimport classes from './BuildControl.css';\n\nconst buildControl = (props) => (\n    <div className={classes.BuildControl}>\n        <div className={classes.Label}>{props.label}</div>\n        <button className={classes.Less} onClick={props.removed} disabled={props.disabled}>Moins</button>\n        <button className={classes.More} onClick={props.added}>Plus</button>\n    </div>\n);\n\nexport default buildControl;","import React from 'react';\n\nimport classes from './BuildControls.css';\nimport BuildControl from './BuildControl/BuildControl';\n\nconst controls = [\n    { label: 'Salad', type: 'salad'},\n    { label: 'Bacon', type: 'bacon'},\n    { label: 'Cheese', type: 'cheese'},\n    { label: 'Meat', type: 'meat'},\n];\n\nconst buildControls = (props) => (\n    <div className={classes.BuildControls}>\n        {controls.map(ctrl => (\n            <BuildControl \n            key={ctrl.label} \n            label={ctrl.label} \n            added={() => props.ingredientAdded(ctrl.type)}\n            removed={() => props.ingredientRemove(ctrl.type)} \n            disabled={props.disabled[ctrl.type]}/>\n        ))}\n    </div>\n)\n\nexport default buildControls;\n","import React, { Component } from 'react';\n\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from './../../components/Burger/BuildControls/BuildControls';\n\nconst PRICE_INGREDIENT = {\n    salad: 0.5,\n    bacon: 0.4,\n    cheese: 0.6,\n    meat: 0.8\n}\n\nclass BurgerBuilder extends Component {\n    state = {\n        ingredients: {\n            salad: 0,\n            bacon: 0,\n            cheese: 0,\n            meat: 0\n        },\n        totalPrice: 4\n    }\n\n    addIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        const updateCount = oldCount + 1;\n        const updateIngredient = {\n            ...this.state.ingredients\n        };\n        updateIngredient[type] = updateCount;\n        const newPrice = this.state.totalPrice + PRICE_INGREDIENT[type];\n        this.setState({totalPrice: newPrice, ingredients: updateIngredient});\n    }\n\n    removeIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        if (oldCount !== 0) {\n            const updateCount = oldCount - 1;\n            const updateIngredient = {\n                ...this.state.ingredients\n            };\n            updateIngredient[type] = updateCount;\n            const newPrice = this.state.totalPrice - PRICE_INGREDIENT[type];\n            this.setState({totalPrice: newPrice, ingredients: updateIngredient});\n        }\n    }\n    render (){ \n        const disableInfo = {\n            ...this.state.ingredients\n        }\n        for (let key in disableInfo){\n            disableInfo[key] = disableInfo[key] <= 0\n        }\n        return (\n            <Aux>\n                <Burger ingredients={this.state.ingredients}/>\n                <BuildControls\n                    ingredientAdded={this.addIngredientHandler} \n                    ingredientRemove={this.removeIngredientHandler}\n                    disabled={disableInfo}/>\n            </Aux>\n        );\n    }\n}\n\nexport default BurgerBuilder;","import React, { Component } from 'react';\n\nimport Layout from './components/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Layout>\n          <BurgerBuilder />\n        </Layout>\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl_1jYc3\",\"Label\":\"BuildControl_Label_33Z-p\",\"Less\":\"BuildControl_Less_377MJ\",\"More\":\"BuildControl_More_28-hQ\"};"],"sourceRoot":""}